<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.green.Lupang.mapper.SaleMapper">
	<!-- 구매코드 저장 -->
	<insert id="saleSave" parameterType="sale">
		insert into sale (s_id, u_id, c_id, receiver, tel, address, total, s_date) 
			values(#{s_id}, #{u_id}, #{c_id}, #{receiver}, #{tel}, #{address}, #{total}, now())
	</insert>
	<insert id="saleItemSave" parameterType="sale_items">
		insert into sale_items values(#{si_id}, #{s_id}, #{i_id}, #{quantity})
	</insert>	
	<select id="findById" parameterType="String" resultType="sale">
		select * from sale where s_id=#{s_id}
	</select>
	<select id="findItemIdsBySaleId" parameterType="String" resultType="integer">
		select i_id from sale_items where s_id = #{s_id}
	</select>
	<select id="getSaleItems" parameterType="String" resultType="sale_items">
		select si.i_id, i.name, i.photo, i.price, si.quantity from sale_items si
			join items i on si.i_id=i.i_id where si.s_id=#{s_id}
	</select>
	<!-- 유저가 주문한 개수 -->
	<select id="saleCountByOrder" parameterType="String" resultType="Integer">
		select count(*) from sale where u_id = #{u_id} and s_status != 'n'
	</select>
	<select id="saleCountByCancleOrder" parameterType="String" resultType="Integer">
		select count(*) from sale where u_id = #{u_id} and s_status = 'n'
	</select>
	<!-- 전체 유저가 주문한 개수 -->
	<select id="saleCountByOrderAll" resultType="Integer">
		select count(*) from sale
	</select>
	<!-- join 문 헷갈려서 대문자 사용 ( 유저 주문 목록 )-->	    
	<select id="findAllByUserId" parameterType="map" resultType="sale">
		select s.*, (select i.photo from sale_items si JOIN items i ON si.i_id = i.i_id
		             where si.s_id=s.s_id limit 1) as photo, 
		            (select i.name from sale_items si JOIN items i ON si.i_id = i.i_id
		             where si.s_id=s.s_id limit 1) as name,
		            (select count(*) from sale_items where s_id = s.s_id) as item_count 
		            FROM sale s where s_status != 'n'     			
					order by s.s_date desc 
					limit #{pageSize} offset #{offset}
	</select>
	<select id="findCancleByUserId" parameterType="map" resultType="sale">
		select s.*, (select i.photo from sale_items si JOIN items i ON si.i_id = i.i_id
		             where si.s_id=s.s_id limit 1) as photo, 
		            (select i.name from sale_items si JOIN items i ON si.i_id = i.i_id
		             where si.s_id=s.s_id limit 1) as name,
		            (select count(*) from sale_items where s_id = s.s_id) as item_count 
		            FROM sale s where s_status = 'n' 	             			
					order by s.s_date desc 
					limit #{pageSize} offset #{offset}
	</select>
	
	<update id="updateStatus" parameterType="sale">
		update sale set s_status=#{s_status} where s_id=#{s_id} 
	</update>
	
	<!--  관리자 용도 -->
	<select id="getAdminOrderList" parameterType="map" resultType="sale">
	    select s.s_id, s.u_id customerid, u.name customer, s.tel, s.address, s.total, s.s_date, s.s_status, sr.sr_id 
		from sale s, user_table u, seller_request sr where s.u_id = u.u_id and u.sr_id= sr.sr_id  order by s.s_date desc
    	limit #{pageSize} offset #{offset};
	</select>
	<!-- 구매문의 페이지 사용자가 구매한 물건 조회 -->
	<select id="getbuyItems" parameterType="String">
	    SELECT DISTINCT i.*                      -- 중복 제거 후, 상품 테이블의 모든 컬럼 조회
	    FROM sale s                             
	    JOIN sale_items si ON s.s_id = si.s_id   
	    JOIN items i ON si.i_id = i.i_id        
	    WHERE s.u_id = #{u_id}                   -- 조건: 로그인한 사용자의 ID와 일치하는 주문만 조회
	</select>
	
	<!-- 인기 구매 top 5 그래프를 위한 쿼리! -->
	<select id="getTopSellingItems" resultType="TopSaleItemDTO">
		<!-- SELECT i.name, COUNT(*) AS count
		FROM sale_items si, items i where si.i_id = i.i_id
		GROUP BY si.i_id
		ORDER BY count DESC
		LIMIT 5 -->
		SELECT i.name, SUM(si.quantity) AS count FROM sale_items si, items i
		WHERE si.i_id = i.i_id
		GROUP BY i.name	ORDER BY count DESC LIMIT 5
	</select>
			<!-- 관리자페이지 판매자 월별 매출액 / '%Y-%m' = 2025-04.. 형식 -->
	<select id="saleMonthList" parameterType="list" resultType="sale">
		select date_format(s.s_date, '%Y-%m') `year_month`, sr.sr_id ,sum(s.total) total_sum
		from sale s, seller_request sr 
		where date_format(s.s_date, '%Y-%m') and s.u_id = sr.u_id 
		group by `year_month`, sr.sr_id order by `year_month`
	</select>
</mapper>