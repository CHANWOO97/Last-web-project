<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.green.Lupang.mapper.SellerMapper">
	<insert id="insert" parameterType="seller">
		<selectKey keyProperty="sr_id" order="BEFORE"
			resultType="integer">
			select ifnull(max(sr_id), 0) + 1 from seller_request
		</selectKey>
		insert into seller_request (sr_id, sr_state, srq_at, on_id, sr_ev,
		srw_pev, ic_id, u_id)
		values
		(#{sr_id}, 'n', now(), #{on_id}, #{sr_ev},
		#{srw_pev}, #{ic_id}, #{u_id})
	</insert>
		<!-- 판매자 테이블 전체 가져오기 + user 테이블의 seller_role추가 + 페이징 -->
	<select id="seller_list" parameterType="map" resultType="seller">
		select s.*, u.seller_role
  		from seller_request s
    	join user_table u ON s.u_id = u.u_id
    	<!-- u_id가 같을 경우, seller_request 테이블에서 sr_id가 가장 큰 (즉, 가장 최신) 행만 조회 -->
    	where s.sr_id IN (select MAX(sr_id) from seller_request group by u_id)
    	<!-- 페이징 -->
    	order BY srq_at desc limit #{startRow}, #{rowPerPage}
	</select>
	<select id="selectByUid" parameterType="string"
		resultType="seller">
		select * from seller_request where sr_id = #{sr_id}
		order by srq_at desc limit 1
	</select>
	<select id="select_id" parameterType="string"
		resultType="seller">
		select s.*, c.ic_name from seller_request s		
		join items_category c ON s.ic_id = c.ic_id
		where s.sr_id = #{sr_id}
	</select>
	<select id="getsrid" parameterType="string" resultType="int">
    	select sr_id from seller_request where u_id = #{u_id} order by srq_at desc limit 1
	</select>		
		<!-- 상품 - 판매자 관계테이블 -->
	<insert id="insetSellrItems" parameterType="selleritems">
		insert into seller_items (sr_id, i_id) values(#{sr_id}, #{i_id})
	</insert>
		<!-- 내상품보러가기 / 상품 - 판매자 테이블을 통해 해당하는 상품만 조회   -->
	<select id="getItesmsBysrId" parameterType="integer" resultType="items">
		select i.* from seller_items si join items i on si.i_id = i.i_id
    	where si.sr_id = #{sr_id}
	</select>
		<!-- 페이징 / 등록된 상품 총 갯수 조회 -->
	<select id="countItemsBySeller" parameterType="int" resultType="int">
			select count(*) from seller_items where sr_id=#{sr_id}
	</select>
		<!-- 페이징 / 판매자 등록 상품 리스트 조회  -->
	<select id="getItemsBySeller" parameterType="map" resultType="selleritems">
			select i.*, si.sr_id from seller_items si, items i where si.i_id = i.i_id and 
			si.sr_id = #{sr_id} order by i.reg_date desc
	</select>
		<!-- 판매자 승인 처리 (sr_state → 'y') -->
	<update id="approve" parameterType="int">
	    update seller_request set sr_state = 'y' where sr_id = #{sr_id}
	</update>
		<!-- 판매자 거절 처리 (sr_state → 'r') --> 
	<update id="reject" parameterType="int">
	    update seller_request set sr_state = 'r' where sr_id = #{sr_id}
	</update>
		<!-- 판매자 거절 처리 후 user mypage로 전달할 메시지 저장 -->
	<update id="updateCnMsg" parameterType="seller">
	    update seller_request set cn_msg = #{cn_msg} where sr_id = #{sr_id}
	</update>
		<!-- 마이페이지 메시지 전달 후 cn_msg를 null로 -->
	<update id="updateNullCnMsg" parameterType="seller">
	    update seller_request set cn_msg = null where sr_id = #{sr_id}
	</update>
		<!-- admin/analytics2 / 관리자 페이지 정산명세서 리스트 가져오기(*sr_state(판매자일때만 = 'y')) -->
	<select id="sellerListbySr_id" parameterType="map" resultType="seller">
		select s.sr_id, s.u_id, s.ic_id, s.sr_state, s.srq_at, s.on_id, s.sr_ev, u.seller_role, ic.ic_name,
		sum(sa.total) total_sum FROM seller_request s, user_table u, items_category ic, sale sa
		where s.u_id = u.u_id and s.ic_id = ic.ic_id and sa.u_id = u.u_id
		and s.sr_id in (select max(sr_id) from seller_request group by u_id) and s.sr_state = 'y'
		group by s.sr_id, s.u_id, s.ic_id, s.sr_state, s.srq_at, u.seller_role, ic.ic_name, s.on_id, s.sr_ev
		order by s.srq_at desc limit #{offset}, #{rowPerPage}
	</select>
		<!-- admin/analytics2 / 관리자 페이지 정산명세서 총 갯수 가져오기(*sr_state(판매자일때만 = 'y')) -->
	<select id="countSeller" parameterType="integer" resultType="integer">
		select count(*) from seller_request s join user_table u on s.u_id = u.u_id
		where s.sr_id in (select max(sr_id) from seller_request group by u_id)
		and s.sr_state = 'y'order by reg_date DESC 
	</select>
</mapper>